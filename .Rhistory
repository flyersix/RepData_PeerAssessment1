add2 <- function(x, y) {
x + y
}
add2(3, 5)
above <- function (x, n) {
use <- x>n
x[use]
}
x <- 1:20
above(x, 12)
above <- function (x, n = 10) {
use <- x>n
x[use]
}
above(x)
above(x, 13)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], no.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
ugluhluhouygouyfifti
x+y = 5
x + y<- 5
add2
add2 (2, 1)
load(".RData")
getwd()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(swirl)
ls()
rm(list = ls())
swirl()
TRUE == TRUE
FALSE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which()
which(ints)
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function("My first function!")
boring_function()
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8)))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x), c(8, 4, 0))
evaluate(function(x){x}, c(8, 4, 0))
evaluate(function[x], c(8, 4, 0))
evaluate(function(x)[1], c(8, 4, 0))
evaluate(function(x)[1], c(8, 4, 0))
info()
evaluate(function[1], c(8, 4, 0))
evaluate
evaluate([x], c(8, 4, 0))
evaluate(x, c(8, 4, 0))
evaluate([1], c(8, 4, 0))
evaluate(function(x)[x], c(8, 4, 0))
skip()
evaluate(function(x){x[3]}, c(8, 4, 0))
skip()
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Alissa")
submit()
submit()
mad_libs(Bourne, pretty, Phish)
mad_libs("Bourne", "pretty", "Phish")
submit()
skip()
I %p% love %p% R
skip()
library(swirl)
ls()
rm(list = ls())
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class((cls_list))
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <-flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6))
unique(c(3,4,5,5,6,6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
>tapply
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$landmass, flags$population, summary)
tapply(flags$population, flags$landmass, summary)
bye()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
swirl()
library(datasets)
ls()
list(datasets)
data(iris)
?iris
names(iris)
summary(iris)
unique(species)
unique(Species)
head(iris)
tapply(iris, species, mean)
tapply(iris, "species", mean)
sapply(iris, iris$Species, mean)
sapply(iris, Species, mean)
vapply(iris$Species,mean)
?sapply
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 2, mean)
colMeans(iris)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
?apply
library(datasets)
data("mtcars")
?mtcars
head(mtcars)
tail(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
nrows(mtcars)
numrows(mtcars)
nrow(mtcars)
nrow(mtcars)
avehp <- tapply(mtcars$hp, mtcars$cyl, mean)
avehp
ave(hp[1])
avehp[1]
abs(avehp[1]-avehp[3])
debug(ls)
ls()
15
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count -grade)
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
skip()
bye()
data.table::address()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
install.packages("data.table")
install.packages("data.table")
dt <- data.table(read.csv(f))
f <- file.path(getwd(), "getdata-data-ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
dt <- data.table(read.csv(f))
packages <- c("data.table", "jpeg")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
setInternet2(TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
agricultureLogical <- dt$ACR == 3 & dt$AGS == 6
head(dt)
which(agricultureLogical)[1:3]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f, mode = "wb")
img <- readJPEG(f, native = TRUE)
install.packages("readJPEG")
install.packages("jpeg")
img <- readJPEG(f, native = TRUE)
sapply(packages, require, character.only = TRUE, quietly = TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f, mode = "wb")
img <- readJPEG(f, native = TRUE)
quantile(img, probs = c(0.3, 0.8))
library(swirl)
ls()
rm(list = ls())
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("knitr")
setwd("~/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.md")
